{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Zips accessor arrays to an object.\n*\n* @private\n* @param {Object} properties - properties object\n* @param {Object} values - values object\n* @returns {Object} result\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var props = toAccessorArray( [ 'a', 'b', 'c' ] );\n* var values = toAccessorArray( [ 1, 2, 3 ] );\n*\n* var obj = accessors( arraylike2object( props ), arraylike2object( values ) );\n* // returns { 'a': 1, 'b': 2, 'c': 3 }\n*/\nfunction accessors( properties, values ) {\n\tvar pdata;\n\tvar vdata;\n\tvar pget;\n\tvar vget;\n\tvar out;\n\tvar i;\n\n\tpdata = properties.data;\n\tpget = properties.accessors[ 0 ];\n\n\tvdata = values.data;\n\tvget = values.accessors[ 0 ];\n\n\tout = {};\n\tfor ( i = 0; i < pdata.length; i++ ) {\n\t\tout[ pget( pdata, i ) ] = vget( vdata, i );\n\t}\n\treturn out;\n}\n\n/**\n* Zips indexed collections to an object.\n*\n* @private\n* @param {Collection} properties - list of properties\n* @param {Collection} values - list of values\n* @returns {Object} result\n*\n* @example\n* var props = [ 'a', 'b', 'c' ];\n* var values = [ 1, 2, 3 ];\n*\n* var obj = indexed( props, values );\n* // returns { 'a': 1, 'b': 2, 'c': 3 }\n*/\nfunction indexed( properties, values ) {\n\tvar out;\n\tvar i;\n\n\tout = {};\n\tfor ( i = 0; i < properties.length; i++ ) {\n\t\tout[ properties[ i ] ] = values[ i ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Creates an object from a provided list of properties and a provided list of corresponding values.\n*\n* @param {Collection} properties - list of properties\n* @param {Collection} values - list of values\n* @returns {Object} result\n*\n* @example\n* var props = [ 'a', 'b', 'c' ];\n* var values = [ 1, 2, 3 ];\n*\n* var obj = zip2object( props, values );\n* // returns { 'a': 1, 'b': 2, 'c': 3 }\n*/\nfunction zip2object( properties, values ) {\n\tvar o1 = arraylike2object( properties );\n\tvar o2 = arraylike2object( values );\n\n\tif ( o1.accessorProtocol || o2.accessorProtocol ) {\n\t\treturn accessors( o1, o2 );\n\t}\n\treturn indexed( properties, values );\n}\n\n\n// EXPORTS //\n\nexport default zip2object;\n"],"names":["zip2object","properties","values","o1","arraylike2object","o2","accessorProtocol","pdata","vdata","pget","vget","out","i","data","accessors","length","indexed"],"mappings":";;sGA6GA,SAASA,EAAYC,EAAYC,GAChC,IAAIC,EAAKC,EAAkBH,GACvBI,EAAKD,EAAkBF,GAE3B,OAAKC,EAAGG,kBAAoBD,EAAGC,iBApEhC,SAAoBL,EAAYC,GAC/B,IAAIK,EACAC,EACAC,EACAC,EACAC,EACAC,EASJ,IAPAL,EAAQN,EAAWY,KACnBJ,EAAOR,EAAWa,UAAW,GAE7BN,EAAQN,EAAOW,KACfH,EAAOR,EAAOY,UAAW,GAEzBH,EAAM,CAAA,EACAC,EAAI,EAAGA,EAAIL,EAAMQ,OAAQH,IAC9BD,EAAKF,EAAMF,EAAOK,IAAQF,EAAMF,EAAOI,GAExC,OAAOD,CACR,CAkDSG,CAAWX,EAAIE,GAjCxB,SAAkBJ,EAAYC,GAC7B,IAAIS,EACAC,EAGJ,IADAD,EAAM,CAAA,EACAC,EAAI,EAAGA,EAAIX,EAAWc,OAAQH,IACnCD,EAAKV,EAAYW,IAAQV,EAAQU,GAElC,OAAOD,CACR,CA0BQK,CAASf,EAAYC,EAC7B"}